package com.jotase.garage.POJO;
// Generated 04-jun-2014 0:28:18 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Intervention generated by hbm2java
 */
@Entity
@Table(name="intervention"
    ,catalog="garage"
)
public class Intervention  implements java.io.Serializable {


     private Integer id;
     private Vehicle vehicle;
     private Date dateStart;
     private Date dateEnd;
     private String notes;
     private Boolean isFinished;
     private Set<Invoice> invoices = new HashSet<Invoice>(0);
     private Set<Product> products = new HashSet<Product>(0);

    public Intervention() {
    }

    public Intervention(Vehicle vehicle, Date dateStart, Date dateEnd, String notes, Boolean isFinished, Set<Invoice> invoices, Set<Product> products) {
       this.vehicle = vehicle;
       this.dateStart = dateStart;
       this.dateEnd = dateEnd;
       this.notes = notes;
       this.isFinished = isFinished;
       this.invoices = invoices;
       this.products = products;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="vehicleID")
    public Vehicle getVehicle() {
        return this.vehicle;
    }
    
    public void setVehicle(Vehicle vehicle) {
        this.vehicle = vehicle;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="dateStart", length=10)
    public Date getDateStart() {
        return this.dateStart;
    }
    
    public void setDateStart(Date dateStart) {
        this.dateStart = dateStart;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="dateEnd", length=10)
    public Date getDateEnd() {
        return this.dateEnd;
    }
    
    public void setDateEnd(Date dateEnd) {
        this.dateEnd = dateEnd;
    }
    
    @Column(name="notes", length=45)
    public String getNotes() {
        return this.notes;
    }
    
    public void setNotes(String notes) {
        this.notes = notes;
    }
    
    @Column(name="isFinished")
    public Boolean getIsFinished() {
        return this.isFinished;
    }
    
    public void setIsFinished(Boolean isFinished) {
        this.isFinished = isFinished;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="intervention")
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="intervention_has_products", catalog="garage", uniqueConstraints={@UniqueConstraint(columnNames="interventionId"), @UniqueConstraint(columnNames="productId")}, joinColumns = { 
        @JoinColumn(name="interventionId", unique=true, nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="productId", unique=true, nullable=false, updatable=false) })
    public Set<Product> getProducts() {
        return this.products;
    }
    
    public void setProducts(Set<Product> products) {
        this.products = products;
    }




}


